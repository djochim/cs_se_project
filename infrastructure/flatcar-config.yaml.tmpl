variant: flatcar
version: 1.0.0

storage:
  directories:
    - path: /var/www
  files:
    - path: /etc/ssh/sshd_config.d/hardening.conf
      contents:
        inline: |
          PasswordAuthentication no
          PermitRootLogin no
    - path: "/etc/ssl/private/server.key"
      mode: 0644
      overwrite: true
      contents:
        source: "data:text/plain;base64,${private_key}"
      group:
        name: "docker"
    - path: /etc/ssl/certs/server.crt
      mode: 0644
      overwrite: true
      contents:
        source: "data:text/plain;base64,${certificate}"
      group:
        name: "docker"
    - path: /etc/nginx/nginx.conf
      mode: 0644
      overwrite: true
      contents:
        source: "data:text/plain;base64,${nginx_conf_base64}"
      group:
        name: "docker"
passwd:
  users:
    - name: developer
      ssh_authorized_keys:
        - "${developer_ssh}"
      groups: [ sudo, docker, systemd-journal ]
      no_create_home: false
    - name: pipeline
      ssh_authorized_keys:
        - "${pipeline_ssh}"
      groups: [ docker ]
      no_create_home: false
systemd:
  units:
    - name: nginx.service
      enabled: true
      contents: |
        [Unit]
        Description=AEON NGINX
        After=docker.service coreos-metadata.service
        Requires=docker.service coreos-metadata.service

        [Service]
        TimeoutStartSec=0
        ExecStartPre=-/usr/bin/docker rm --force nginx1
        ExecStartPre=-/usr/bin/bash -c "echo \"Hello from ${appname}\" > /var/www/index.html"
        ExecStart=/usr/bin/docker run --name nginx1 \
                  --volume "/var/www:/usr/share/nginx/html:ro" \
                  --volume "/etc/ssl/certs/server.crt:/etc/nginx/certs/server.crt:ro" \
                  --volume "/etc/ssl/private/server.key:/etc/nginx/certs/server.key:ro" \
                  --volume "/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro" \
                  --pull always --log-driver=journald --net host docker.io/nginx:1 \
                  nginx -c /etc/nginx/nginx.conf
        ExecStop=/usr/bin/docker stop nginx1
        Restart=always
        RestartSec=5s

        [Install]
        WantedBy=multi-user.target